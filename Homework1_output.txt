Parth Patel
UH ID# 1837355

--> Exercise Part A Output

1. Entering command use employees, it gave me an output saying - 'switched to db employees'

2. Entering command show dbs, it gave me an output
   admin                40.00 KiB
   config              108.00 KiB
   local                72.00 KiB
   reporting            80.00 KiB
   restaurantbookings  144.00 KiB
   employees             2.00 KiB

--> Exercise Part B Output

1. Entering command use tempory, it gave me an output saying - 'switched to db temporary'
   Entering command db.createCollection('test'); it gave me an output saying - { ok: 1 }
   Entering command db.dropDatabase();, it gave me an output saying  - { ok: 1, dropped: 'temporary' }
   Entering command show dbs, it gave me an output - 
   admin                40.00 KiB
   config               96.00 KiB
   local                72.00 KiB
   reporting            80.00 KiB
   restaurantbookings  144.00 KiB
   employees             2.00 KiB

2. Entering command use employees, it gave me an output saying - 'switched to db employees'
   Entering command db.createCollection('IT');, it gave me an output saying - { ok: 1 }
   Entering command db.createCollection('Accounting');, it gave me an output saying - { ok: 1 }
   Entering command db.createCollection('Help Desk');, it gave me an output saying - { ok: 1 }
   
3. Entering command show collections, it gave me an output - 
   Accounting
   IT
   Marketing

--> Exercise Part C Output
1. Entering command to insert data three times into Accounting collection, it gave me output saying - 
   { acknowledged: true,
   insertedId: ObjectId("6361ee0b8e98bd21a25018cb") } -- Here ObjectId are automated as many new data is filled in
   Entering command to insert data three times into IT collection, it gave me output saying - 
   { acknowledged: true,
   insertedId: ObjectId("6361ef918e98bd21a25018ce") } -- Here ObjectId are automated as many new data is filled in
   Entering command to insert data three times into Marketing collection, it gave me output saying - 
   { acknowledged: true,
   insertedId: ObjectId("6361f67bf2530e538c07734f") -- Here ObjectId are automated as many new data is filled in

2. Entering command db.Accounting.find() to find data in Accounting collection, it gave me output -
   { _id: ObjectId("6361ee0b8e98bd21a25018cb"),
   employeeid: 1,
   name: 'Peter Parker',
   salary: 70000 }
   { _id: ObjectId("6361ee238e98bd21a25018cc"),
   employeeid: 2,
   name: 'Clark Kent',
   salary: 80000 }
   { _id: ObjectId("6361ee438e98bd21a25018cd"),
   employeeid: 3,
   name: 'John Snow',
   salary: 85000 }

   Entering command db.IT.find() to find data in IT collection, it gave me output -
   { _id: ObjectId("6361ef918e98bd21a25018ce"),
   employeeid: 1,
   name: 'Tom Brady',
   salary: 90000 }
   { _id: ObjectId("6361efcd8e98bd21a25018cf"),
   employeeid: 2,
   name: 'Luke Skywalker',
   salary: 80000 }
   { _id: ObjectId("6361f00a8e98bd21a25018d0"),
   employeeid: 3,
   name: 'Jonny Bravo',
   salary: 750000 }
  
   Entering command db.Marketing.find() to find data in IT collection, it gave me output -
   { _id: ObjectId("6361f67bf2530e538c07734f"),
   employeeid: 1,
   name: 'Mike Wazowski',
   salary: 75000 }
   { _id: ObjectId("6361f6caf2530e538c077350"),
   employeeid: 2,
   name: 'Michael Jordan',
   salary: 95000 }
   { _id: ObjectId("6361f6dff2530e538c077351"),
   employeeid: 3,
   name: 'Michael Jackson',
   salary: 80000 }

-->Exercise Part D
1. Entering three new sets into IT collection, it gave me output - { acknowledged: true,
  insertedIds: { '0': ObjectId("6363277a4b5a870c209fdd10") } }

2. Entering the command db.IT.find({employeeid: 1}), it gave me output - 
   { _id: ObjectId("6361ef918e98bd21a25018ce"),
     employeeid: 1,
     name: 'Tom Brady',
     salary: 90000 } 
   Entering the command db.Marketing.find({employeeid: 3}), it gave me output - 
   { _id: ObjectId("6361f6dff2530e538c077351"),
     employeeid: 3,
     name: 'Michael Jackson',
     salary: 80000 }

3. Entering the command db.Accounting.find({name: "Luke Skywalker"}), it gave me output -
   { _id: ObjectId("6361efcd8e98bd21a25018cf"),
    employeeid: 2,
    name: 'Luke Skywalker',
    salary: 80000 }
   Entering the command db.IT.find({name: "'Syed',"}), it gave me output -
   { _id: ObjectId("6363277a4b5a870c209fdd0f"),
     employeeid: 2455,
     name: 'Syed',
     salary: 90000 }

4. Entering the command db.IT.find({name: /^John/}), it gave me output -
   { _id: ObjectId("6363277a4b5a870c209fdd0e"),
     employeeid: 1187,
     name: 'John Steight',
     salary: 75000 }

5. Entering the command db.IT.find({"name": /John/}), it gave me output -
   { _id: ObjectId("6363277a4b5a870c209fdd0e"),
     employeeid: 1187,
     name: 'John Steight',
     salary: 75000 }
   { _id: ObjectId("6363277a4b5a870c209fdd10"),
     employeeid: 24113,
     name: 'Wright John',
     salary: 65000 }

--> Exercise Part E
1. Entering the command b.zips.find({ pop:{ $lt: 1500}}), it gave me output - 
   { _id: '01008',
     city: 'BLANDFORD',
     loc: [ -72.936114, 42.182949 ],
     pop: 1240,
     state: 'MA' }
   { _id: '01012',
     city: 'CHESTERFIELD',
     loc: [ -72.833309, 42.38167 ],
     pop: 177,
     state: 'MA' }
    { _id: '01026',
     city: 'CUMMINGTON',
     loc: [ -72.905767, 42.435296 ],
     pop: 1484,
     state: 'MA' }
    { _id: '01032',
      city: 'GOSHEN',
      loc: [ -72.844092, 42.466234 ],
      pop: 122,
      state: 'MA' }
    { _id: '01039',
      city: 'HAYDENVILLE',
      loc: [ -72.703178, 42.381799 ],
      pop: 1387,
      state: 'MA' }
    { _id: '01053',
      city: 'LEEDS',
     loc: [ -72.703403, 42.354292 ],
     pop: 1350,
     state: 'MA' }
    { _id: '01070',
     city: 'PLAINFIELD',
     loc: [ -72.918289, 42.514393 ],
     pop: 571,
     state: 'MA' }
    { _id: '01071',
     city: 'RUSSELL',
     loc: [ -72.840343, 42.147063 ],
     pop: 608,
     state: 'MA' }
    { _id: '01098',
      city: 'WORTHINGTON',
      loc: [ -72.931427, 42.384293 ],
      pop: 877,
      state: 'MA' }
   //type 'it' to see more

2. Entering the command db.zips.find({city: { $eq: "CHESTER" }}), it gave me output - 
   { _id: '01011',
     city: 'CHESTER',
     loc: [ -72.988761, 42.279421 ],
     pop: 1688,
     state: 'MA' }
   { _id: '03036',
     city: 'CHESTER',
     loc: [ -71.244962, 42.967756 ],
     pop: 2691,
     state: 'NH' }
   { _id: '05143',
     city: 'CHESTER',
     loc: [ -72.603125, 43.283124 ],
     pop: 3449,
     state: 'VT' }
    { _id: '06412',
     city: 'CHESTER',
     loc: [ -72.464293, 41.404903 ],
     pop: 3417,
     state: 'CT' }
   { _id: '07930',
     city: 'CHESTER',
     loc: [ -74.677649, 40.789193 ],
     pop: 6635,
     state: 'NJ' }
   { _id: '10918',
     city: 'CHESTER',
     loc: [ -74.265116, 41.355381 ],
     pop: 9196,
     state: 'NY' }
   { _id: '19013',
     city: 'CHESTER',
     loc: [ -75.374687, 39.849817 ],
     pop: 49144,
     state: 'PA' }
   { _id: '21619',
     city: 'CHESTER',
     loc: [ -76.284183, 38.958296 ],
     pop: 4199,
     state: 'MD' }
   { _id: '23831',
     city: 'CHESTER',
     loc: [ -77.41557, 37.342934 ],
      pop: 24788,
     state: 'VA' }
   { _id: '26034',
     city: 'CHESTER',
     loc: [ -80.558439, 40.598109 ],
     pop: 5966,
     state: 'WV' }
   { _id: '75936',
     city: 'CHESTER',
     loc: [ -94.458099, 30.928532 ],
     pop: 1588,
     state: 'TX' }
   //type 'it' to see more

3. Entering the command db.zips.find({ loc: { $all: ['84.38570799999999', '46.015207']}}), it gave me output - 
   { _id : '49751', 
     city : 'JOHANNESBURG', 
     loc : [ -84.38570799999999, 45.015207 ], 
     pop : 2062,
     state : 'MI' }

4. Entering the command db.zips.find({ $or: [{ city: 'WARREN'}, {loc: {$in:[-84.38570799999999, 45.015207 ]}}]}), it gave me output - 
   { _id: '02885',
     city: 'WARREN',
     loc: [ -71.270165, 41.725618 ],
     pop: 11385,
     state: 'RI' }
   { _id: '03279',
     city: 'WARREN',
     loc: [ -71.89013, 43.944667 ],
     pop: 886,
     state: 'NH' }
   { _id: '04864',
     city: 'WARREN',
     loc: [ -69.247894, 44.127066 ],
     pop: 2816,
     state: 'ME' }
   { _id: '06754',
     city: 'WARREN',
     loc: [ -73.367472, 41.770084 ],
     pop: 1278,
     state: 'CT' }
   { _id: '07059',
     city: 'WARREN',
     loc: [ -74.510456, 40.631787 ],
     pop: 10867,
     state: 'NJ' }
   { _id: '44481',
     city: 'WARREN',
     loc: [ -80.871806, 41.172426 ],
     pop: 5407,
     state: 'OH' }
   { _id: '44483',
     city: 'WARREN',
     loc: [ -80.816448, 41.263878 ],
     pop: 30257,
     state: 'OH' }
   { _id: '44484',
     city: 'WARREN',
     loc: [ -80.764243, 41.231819 ],
     pop: 25898,
     state: 'OH' }
   { _id: '44485',
     city: 'WARREN',
     loc: [ -80.844136, 41.240511 ],
     pop: 24847,
     state: 'OH' }
   { _id: '46792',
     city: 'WARREN',
     loc: [ -85.418337, 40.688646 ],
     pop: 2404,
     state: 'IN' }
   { _id: '48089',
     city: 'WARREN',
     loc: [ -82.997385, 42.468494 ],
     pop: 35861,
     state: 'MI' }
   { _id: '48091',
     city: 'WARREN',
     loc: [ -83.059263, 42.466463 ],
     pop: 33165,
     state: 'MI' }
   { _id: '48092',
     city: 'WARREN',
     loc: [ -83.064278, 42.512459 ],
     pop: 25781,
     state: 'MI' }
   { _id: '48093',
     city: 'WARREN',
     loc: [ -82.996764, 42.514943 ],
     pop: 50327,
     state: 'MI' }
   { _id: '61087',
     city: 'WARREN',
     loc: [ -89.985992, 42.489001 ],
     pop: 1967,
     state: 'IL' }
   { _id: '71671',
     city: 'WARREN',
     loc: [ -92.077824, 33.613983 ],
     pop: 8828,
     state: 'AR' }
   { _id: '77664',
     city: 'WARREN',
     loc: [ -94.411974, 30.597776 ],
     pop: 2465,
     state: 'TX' }
   { _id: '97053',
     city: 'WARREN',
     loc: [ -122.863445, 45.826043 ],
     pop: 2378,
     state: 'OR' }

--> Exercise Part F
1. Entering the command db.employees.find({$where: function() { return (this.salary > 7500) }}), it gave me output -
   { _id: ObjectId("6361ee238e98bd21a25018cc"),
   employeeid: 2,
   name: 'Clark Kent',
   salary: 80000 }
   { _id: ObjectId("6361ee438e98bd21a25018cd"),
   employeeid: 3,
   name: 'John Snow',
   salary: 85000 }
   { _id: ObjectId("6361ef918e98bd21a25018ce"),
   employeeid: 1,
   name: 'Tom Brady',
   salary: 90000 }
   { _id: ObjectId("6361efcd8e98bd21a25018cf"),
     employeeid: 2,
     name: 'Luke Skywalker',
     salary: 80000 }
   { _id: ObjectId("6363277a4b5a870c209fdd0f"),
     employeeid: 2455,
     name: 'Syed',
     salary: 90000 }
   { _id: ObjectId("6361f6caf2530e538c077350"),
     employeeid: 2,
     name: 'Michael Jordan',
     salary: 95000 }
   { _id: ObjectId("6361f6dff2530e538c077351"),
     employeeid: 3,
     name: 'Michael Jackson',
     salary: 80000 }

2. Entering the command db.employees.find({$where: function() { return (this.name == "John") }}), it gave me output -
   { _id: ObjectId("6361ee438e98bd21a25018cd"),
     employeeid: 3,
     name: 'John Snow',
     salary: 85000 }
   { _id: ObjectId("6363277a4b5a870c209fdd0e"),
     employeeid: 1187,
     name: 'John Steight',
     salary: 75000 }
   { _id: ObjectId("6363277a4b5a870c209fdd10"),
     employeeid: 24113,
     name: 'Wright John',
     salary: 65000 }

--> Exercise Part G
1. Entering the command db.IT.find({},{ name: true, salary: true }), it gave me output - 
   { _id: ObjectId("6361ef918e98bd21a25018ce"),
     name: 'Tom Brady',
     salary: 90000 }
   { _id: ObjectId("6361efcd8e98bd21a25018cf"),
     name: 'Luke Skywalker',
     salary: 80000 }
   { _id: ObjectId("6361f00a8e98bd21a25018d0"),
     name: 'Jonny Bravo',
     salary: 750000 }
   { _id: ObjectId("6363277a4b5a870c209fdd0e"),
     name: 'John Steight',
     salary: 75000 }
   { _id: ObjectId("6363277a4b5a870c209fdd0f"),
     name: 'Syed',
     salary: 90000 }
   { _id: ObjectId("6363277a4b5a870c209fdd10"),
     name: 'Wright John',
     salary: 65000 }
